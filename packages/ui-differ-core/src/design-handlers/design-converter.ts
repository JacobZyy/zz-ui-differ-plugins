// generated by ai
export interface DesignConvertConfig {
  /** 顶部安全区域高度 */
  safeTopHeight: number
  /** 底部安全区域高度 */
  safeBottomHeight: number
  /** 是否启用px转换 */
  convertPxTrigger: boolean
}

export type ConvertFunction = (designPx: number) => number

/** 设计稿默认宽度 */
const DESIGN_DEFAULT_WIDTH = 750
/** DOM的宽度 */
const DOM_DEFAULT_WIDTH = 37.5

/**
 * 创建可配置的设计稿转换器
 * @param config 转换配置
 * @returns 转换函数
 */
export function createDesignConverter(config: DesignConvertConfig): ConvertFunction {
  return (designPx: number) => {
    if (!config.convertPxTrigger) {
      return designPx
    }

    if (designPx <= 1) {
      return designPx
    }

    // TODO:这边按zz px2rem的原逻辑来， 保留了两位小数 坑就是会导致精度丢失
    const originRemValue = designPx / DESIGN_DEFAULT_WIDTH * 10
    const remValue = Math.round(originRemValue * 100) / 100
    return Math.round(remValue * DOM_DEFAULT_WIDTH)
  }
}

/**
 * 创建带配置的坐标转换器
 * @param config 转换配置
 * @returns 坐标转换函数
 */
export function createCoordinateConverter(config: DesignConvertConfig) {
  const converter = createDesignConverter(config)

  return {
    convertX: (x: number, rootOffsetX: number) => converter(x - rootOffsetX),
    convertY: (y: number, rootOffsetY: number, isRoot = false) => {
      if (isRoot) {
        return 0
      }
      return converter(y - rootOffsetY - config.safeTopHeight)
    },
    convertWidth: (width: number) => converter(width),
    convertHeight: (height: number, isRoot = false) => {
      if (isRoot) {
        return converter(height - (config.safeTopHeight + config.safeBottomHeight))
      }
      return converter(height)
    },
    convertPadding: converter,
    convertBorder: converter,
  }
}
